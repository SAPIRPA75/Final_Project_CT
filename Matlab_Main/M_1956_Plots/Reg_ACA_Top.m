function [xPos,yPos] = Reg_ACA_Top(X)
%segmentImage Segment image using auto-generated code from Image Segmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the Image Segmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 05-Apr-2024
%----------------------------------------------------


% Adjust data to span data range.
X = imadjust(X);

% Create empty mask
BW = false(size(X,1),size(X,2));

% Draw ROIs

xPos = [269.7014 269.7131 269.7405 269.7774 269.8207 269.8788 269.9557 270.0446 270.1446 270.2280 270.2829 270.3284 270.3886 270.4729 270.5680 270.6639 270.7537 270.8413 270.9256 270.9975 271.0682 271.1421 271.2149 271.2985 271.4059 271.5071 271.5833 271.6540 271.7300 271.8102 271.8978 271.9980 272.1164 272.2512 272.3641 272.4403 272.5036 272.5755 272.6672 272.7610 272.8446 272.9310 273.0165 273.0946 273.1611 273.2182 273.2943 273.4113 273.5442 273.6806 273.8430 274.0181 274.1785 274.3392 274.5376 274.7567 274.9470 275.1200 275.2953 275.4810 275.6656 275.8206 275.9392 276.0551 276.1659 276.2578 276.3401 276.4299 276.5333 276.6345 276.7147 276.7792 276.8457 276.9100 276.9607 277.0019 277.0430 277.0938 277.1581 277.2266 277.3007 277.3988 277.5212 277.6562 277.7946 277.9348 278.0603 278.1630 278.2556 278.3254 278.3803 278.4351 278.4837 278.5227 278.5523 278.5735 278.5913 278.6008 278.6030 278.6030 278.6030 278.6030 278.6008 278.5913 278.5756 278.5639 278.5501 278.5249 278.4953 278.4625 278.4172 278.3708 278.3275 278.2768 278.2103 278.1365 278.0700 278.0172 277.9665 277.9075 277.8398 277.7672 277.7027 277.6286 277.5329 277.4495 277.3945 277.3533 277.3122 277.2614 277.1993 277.1424 277.0978 277.0483 276.9945 276.9471 276.9164 276.8943 276.8709 276.8340 276.7909 276.7602 276.7402 276.7285 276.7147 276.6873 276.6504 276.6135 276.5818 276.5468 276.4921 276.4299 276.3770 276.3221 276.2461 276.1523 276.0508 275.9273 275.7680 275.5835 275.3794 275.1348 274.8880 274.6928 274.5533 274.4285 274.2576 273.9677 273.5511 273.1849 272.9597 272.8395 272.7929 272.7865 272.8024 272.8488 272.9172 272.9775 273.0303 273.0830 273.1220 273.1453 273.1632 273.1685 273.1473 273.0968 273.0420 272.9974 272.9501 272.9036 272.8624 272.8213 272.7705 272.7041 272.6281 272.5437 272.4391 272.3191 272.2111 272.1164 272.0339 271.9217 271.7662 271.6296 271.5083 271.3624 271.1557 270.9239 270.7412 270.6165 270.5022 270.3665 270.2407 270.1267 270.0138 269.9062 269.8069 269.7088 269.6138 269.5231 269.4343 269.3395 269.2485 269.1505 269.0471 268.9520 268.8773 268.8306 268.7873 268.7347 268.6861 268.6449 268.6059 268.5689 268.5416 268.5299 268.5278 268.5278 268.5278 268.5278 268.5278 268.5278 268.5278 268.5278 268.5278 268.5256 268.5161 268.5004 268.4908 268.4887 268.4908 268.5004 268.5182 268.5394 268.5689 268.6101 268.6682 268.7366 268.7852 268.8149 268.8540 268.9066 268.9552 268.9985 269.0471 269.1061 269.1738 269.2443 269.2929 269.3205 269.3500 269.3848 269.4121 269.4259 269.4376 269.4555 269.4767 269.5062 269.5431 269.5821 269.6212 269.6581 269.6855 269.6972];
yPos = [222.5919 222.5762 222.5667 222.5645 222.5645 222.5624 222.5507 222.5255 222.4981 222.4769 222.4569 222.4357 222.4083 222.3809 222.3576 222.3281 222.2912 222.2521 222.2109 222.1623 222.1076 222.0611 222.0273 221.9945 221.9514 221.9144 221.8911 221.8733 221.8637 221.8616 221.8616 221.8616 221.8616 221.8616 221.8616 221.8616 221.8616 221.8616 221.8616 221.8637 221.8733 221.8890 221.8985 221.9007 221.9007 221.9007 221.9028 221.9144 221.9397 221.9650 221.9766 221.9788 221.9788 221.9809 221.9904 222.0061 222.0178 222.0295 222.0495 222.0781 222.1138 222.1424 222.1645 222.1836 222.2014 222.2109 222.2152 222.2247 222.2405 222.2500 222.2521 222.2521 222.2521 222.2521 222.2500 222.2405 222.2226 222.1993 222.1602 222.1054 222.0409 221.9469 221.8045 221.6188 221.3885 221.1101 220.8265 220.5696 220.3070 220.0442 219.8078 219.5945 219.3759 219.1397 218.9054 218.6794 218.4601 218.2636 218.0853 217.9174 217.7517 217.5872 217.4297 217.2790 217.1566 217.0678 216.9843 216.8843 216.7850 216.6835 216.5718 216.4651 216.3649 216.2656 216.1559 216.0356 215.9239 215.8403 215.7675 215.6873 215.5901 215.4763 215.3558 215.2165 215.0593 214.9107 214.8019 214.7248 214.6486 214.5410 214.4028 214.2604 214.1295 213.9943 213.8328 213.6504 213.4601 213.2568 213.0710 212.9060 212.7408 212.6033 212.4872 212.3743 212.2646 212.1515 212.0207 211.8900 211.7769 211.6650 211.5383 211.3980 211.2630 211.1404 211.0149 210.8925 210.7827 210.6792 210.5663 210.4525 210.3498 210.2456 210.1548 210.0957 210.0703 210.0565 210.0684 210.2126 210.5633 211.0146 211.4862 211.9822 212.4035 212.7289 213.0212 213.3223 213.6278 213.8909 214.1392 214.4090 214.6698 214.9084 215.1480 215.4355 215.7884 216.1433 216.4723 216.7467 216.9462 217.0814 217.1850 217.2810 217.3665 217.4372 217.4974 217.5543 217.6008 217.6345 217.6653 217.6989 217.7222 217.7455 217.7791 217.8098 217.8415 217.8805 217.9270 217.9722 218.0029 218.0251 218.0441 218.0641 218.0853 218.1148 218.1517 218.1908 218.2277 218.2572 218.2784 218.3005 218.3291 218.3670 218.4094 218.4663 218.5306 218.5908 218.6456 218.6868 218.7239 218.7808 218.8568 218.9487 219.0658 219.2040 219.3369 219.4521 219.5692 219.6947 219.8248 219.9638 220.0926 220.2153 220.3427 220.4536 220.5551 220.6636 220.7832 220.9189 221.0373 221.1430 221.2525 221.3497 221.4342 221.5197 221.6040 221.6823 221.7773 221.8793 221.9429 221.9809 222.0178 222.0569 222.0959 222.1350 222.1740 222.2131 222.2521 222.2912 222.3302 222.3671 222.3945 222.4083 222.4221 222.4516 222.4981 222.5507 222.5877 222.6014 222.6036 222.6036 222.6036 222.6014 222.5919 222.5762];
m = size(BW, 1);
n = size(BW, 2);
addedRegion = poly2mask(xPos, yPos, m, n);
BW = BW | addedRegion;

% Active contour
iterations = 10;
BW = activecontour(X, BW, iterations, 'edge');

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end

