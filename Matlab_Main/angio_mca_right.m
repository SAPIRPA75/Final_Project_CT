function [xPos,yPos] = angio_mca_right(X)
%segmentImage Segment image using auto-generated code from Image Segmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the Image Segmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 10-Mar-2024
%----------------------------------------------------


% Adjust data to span data range.
X = imadjust(X);

% Create empty mask
BW = false(size(X,1),size(X,2));

% Draw ROIs

xPos = [307.6508 307.5719 307.4672 307.3510 307.2091 307.0304 306.8459 306.6724 306.4878 306.3033 306.1354 305.9764 305.8399 305.7234 305.6125 305.5016 305.3906 305.2795 305.1626 305.0256 304.8719 304.7347 304.6175 304.4887 304.2825 303.9661 303.6496 303.4431 303.3137 303.2015 303.0891 302.9766 302.8640 302.7455 302.6069 302.4514 302.3126 302.1879 302.0431 301.8615 301.6741 301.5034 301.3416 301.1965 301.0456 300.8580 300.6504 300.4571 300.2863 300.1189 299.9540 299.7869 299.6223 299.4612 299.3170 299.1673 298.9869 298.8068 298.6579 298.5152 298.3618 298.2083 298.0095 297.7410 297.4748 297.2234 296.9615 296.7025 296.4674 296.2719 296.0802 295.8763 295.6745 295.5162 295.3790 295.2229 295.0309 294.8398 294.6804 294.5274 294.3638 294.2173 294.0852 293.9388 293.7641 293.5715 293.3678 293.1593 292.9175 292.6964 292.5062 292.3289 292.1538 292.0001 291.8653 291.7352 291.6041 291.4722 291.3453 291.2380 291.1470 291.0393 290.9175 290.8047 290.6779 290.4731 290.2074 289.9428 289.6804 289.4037 289.1379 288.9242 288.7895 288.6673 288.5235 288.3944 288.2869 288.1798 288.0883 287.9961 287.8674 287.7179 287.5626 287.4178 287.2984 287.2144 287.1155 286.9814 286.8397 286.6967 286.5629 286.4473 286.3515 286.2369 286.1106 285.9904 285.8692 285.7118 285.5530 285.4113 285.2970 285.1963 285.0804 284.9470 284.8295 284.7367 284.6632 284.5855 284.4736 284.3577 284.2555 284.1584 284.0552 283.9375 283.8171 283.7158 283.6211 283.5459 283.4685 283.3831 283.3126 283.2652 283.2220 283.1821 283.1409 283.1032 283.0700 283.0548 283.0409 283.0173 282.9968 282.9939 282.9987 283.0054 283.0138 283.0239 283.0355 283.0486 283.0630 283.0785 283.0951 283.1125 283.1307 283.1551 283.2057 283.2933 283.3868 283.4636 283.5313 283.5878 283.6699 283.8051 283.9490 284.0782 284.2012 284.3296 284.4775 284.6417 284.8002 284.9897 285.2523 285.5403 285.7969 286.0332 286.2950 286.6132 286.9421 287.1973 287.4014 287.6506 287.9530 288.2219 288.4248 288.5795 288.7341 288.9310 289.1641 289.4117 289.6168 289.7595 289.8764 290.0076 290.1612 290.3182 290.4775 290.6460 290.8568 291.1044 291.3296 291.4889 291.5892 291.7003 291.8425 291.9737 292.0848 292.1960 292.3272 292.4808 292.6378 292.7914 292.9398 293.1283 293.3668 293.5752 293.7461 293.9030 294.0566 294.1878 294.2990 294.4044 294.5156 294.6411 294.7632 294.8577 294.9746 295.1482 295.3476 295.5270 295.6639 295.7866 295.9493 296.1654 296.3705 296.5447 296.7298 296.9349 297.1401 297.3252 297.4993 297.7275 298.0523 298.4105 298.6786 298.8758 299.1181 299.4339 299.7387 299.9983 300.2664 300.5565 300.7816 300.9100 301.0102 301.1581 301.3318 301.4944 301.6596 301.8537 302.1128 302.4176 302.7339 303.0502 303.3608 303.6456 303.8995 304.1676 304.4576 304.7000 304.9057 305.1332 305.3526 305.5120 305.6122 305.7234 305.8713 306.0225 306.1561 306.2706 306.3985 306.5239 306.6408 306.7720 306.9142 307.0196 307.0826 307.1365 307.1880 307.2420 307.2992 307.3789 307.4728 307.5525 307.6098 307.6580 307.6952 307.7524 307.8431 307.9203 307.9743 308.0000 308.0115 308.0430 308.1112 308.1794 308.2166 308.2481 308.2963 308.3478 308.4018 308.4590 308.5329 308.6069 308.6699 308.7496 308.8493 308.9490 309.0229 309.0544 309.0601 309.0601 309.0601 309.0601 309.0601 309.0601 309.0601 309.0601 309.0601];
yPos = [207.1023 207.0998 207.0974 207.0949 207.0924 207.0899 207.0874 207.0849 207.0823 207.0798 207.0772 207.0746 207.0720 207.0693 207.0666 207.0639 207.0612 207.0584 207.0556 207.0527 207.0498 207.0469 207.0439 207.0409 207.0378 207.0346 207.0315 207.0282 207.0249 207.0215 207.0181 207.0146 207.0111 207.0075 207.0038 207.0001 206.9963 206.9925 206.9886 206.9847 206.9807 206.9767 206.9727 206.9687 206.9704 206.9921 207.0305 207.0579 207.0854 207.1297 207.1830 207.2531 207.3233 207.3768 207.4272 207.4752 207.5258 207.5798 207.6565 207.7533 207.8503 207.9332 208.0197 208.1397 208.2633 208.3728 208.4826 208.6126 208.7596 208.8902 209.0010 209.1064 209.2071 209.2827 209.3280 209.3882 209.4766 209.5379 209.5855 209.6646 209.7640 209.8497 209.9189 210.0052 210.1117 210.2241 210.3367 210.4494 210.5621 210.6749 210.7876 210.9003 211.0130 211.1256 211.2380 211.3446 211.4311 211.5007 211.5870 211.6873 211.7732 211.8365 211.8964 211.9595 212.0506 212.1873 212.3778 212.6139 212.8723 213.1253 213.3925 213.6614 213.8601 214.0129 214.1707 214.3317 214.4835 214.5894 214.6521 214.7057 214.7624 214.8416 214.9407 215.0454 215.1443 215.2232 215.2853 215.3640 215.4627 215.5614 215.6400 215.7076 215.8062 215.9214 216.0089 216.0989 216.2174 216.3441 216.4574 216.5783 216.6768 216.7443 216.8228 216.9156 216.9941 217.0559 217.1345 217.2331 217.3374 217.4418 217.5461 217.6505 217.7492 217.8336 217.9156 218.0168 218.1246 218.2573 218.4076 218.5604 218.6907 218.8011 218.9057 219.0104 219.1208 219.2513 219.3985 219.5462 219.7340 219.9662 220.1488 220.2773 220.4085 220.5565 220.6879 220.7992 220.9048 221.0105 221.1162 221.2219 221.3276 221.4333 221.5391 221.6448 221.7506 221.8678 222.0308 222.2472 222.4527 222.6272 222.8184 223.0438 223.2717 223.4604 223.6259 223.7773 223.9055 223.9888 224.0487 224.1062 224.1804 224.2488 224.2806 224.2866 224.2868 224.2870 224.2872 224.2874 224.2934 224.3251 224.3935 224.4619 224.4936 224.4996 224.4998 224.5000 224.5000 224.5000 224.5000 224.5000 224.5000 224.5000 224.5000 224.4943 224.4685 224.4203 224.3631 224.2834 224.1837 224.0840 224.0101 223.9786 223.9671 223.9356 223.8674 223.7934 223.7305 223.6508 223.5511 223.4514 223.3659 223.2772 223.1493 223.0039 222.8760 222.7873 222.7018 222.6079 222.5282 222.4710 222.4170 222.3598 222.2858 222.2061 222.1232 222.0268 221.9438 221.8583 221.7644 221.6790 221.5902 221.4681 221.3426 221.2315 221.1203 220.9948 220.8727 220.7782 220.6670 220.5134 220.3307 220.1346 219.9777 219.8550 219.7181 219.5445 219.3651 219.1909 218.9858 218.7640 218.5755 218.4162 218.2850 218.1681 218.0311 217.8575 217.6839 217.5412 217.3870 217.1561 216.8661 216.5980 216.3556 216.1281 215.9339 215.7430 215.5436 215.3585 215.1958 215.0422 214.9110 214.8056 214.7201 214.6314 214.5093 214.3838 214.2727 214.1672 214.0618 213.9563 213.8509 213.7455 213.6400 213.5403 213.4607 213.3977 213.3180 213.2183 213.1129 213.0074 212.9020 212.7965 212.6911 212.5857 212.4745 212.3433 212.1954 212.0642 211.9530 211.8476 211.7422 211.6367 211.5313 211.4259 211.3147 211.1835 211.0356 210.9044 210.7875 210.6506 210.4769 210.2976 210.1291 209.9383 209.7074 209.4598 209.2547 209.1120 208.9951 208.8639 208.7160 208.5848 208.4736 208.3682 208.2628 208.1631 208.0891];
m = size(BW, 1);
n = size(BW, 2);
addedRegion = poly2mask(xPos, yPos, m, n);
BW = BW | addedRegion;

% Active contour
iterations = 5;
BW = activecontour(X, BW, iterations, 'Chan-Vese');

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end

